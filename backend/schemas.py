from pydantic import BaseModel, Field, EmailStr
from typing import Optional, List, Literal
from datetime import datetime, date


# ------------------ USERS ------------------
class User(BaseModel):
    email: EmailStr
    name: str
    password_hash: str 
    created_at: datetime = Field(default_factory=datetime.utcnow) 

# ------------------ CATEGORIES ------------------
class Category(BaseModel):
    user_id: str  # s·∫Ω l√† ObjectId d·∫°ng string
    name: str
    icon: Optional[str] = "üì¶"  # c√≥ th·ªÉ d√πng emoji icon
    color: Optional[str] = "#A22727"  # m√£ m√†u hex
    type: Literal["expense", "income"]  # ch·ªâ cho ph√©p 2 lo·∫°i
    created_at: datetime = Field(default_factory=datetime.utcnow)

# ------------------ TRANSACTIONS ------------------
class TransactionItem(BaseModel):

    amount: int  
    type: str 
    category: str
    note: Optional[str] = ""


class Transaction(BaseModel):
    user_id: str 
    date: date # ng√†y chi ti√™u do ng∆∞·ªùi d√πng ch·ªçn 
    items: List[TransactionItem]
    createAt: datetime = Field(default_factory=datetime.utcnow) # th·ªùi ƒëi·ªÉm t·∫°o b·∫£n ghi 

